# Example Playbook to configure query PPDM Server Disaster Recovery
- name: Get sync-instance
  hosts: localhost
  gather_facts: no
  connection: local
  vars_files: 
    - ./vars/main.yml
  vars:
      isoformat: '%Y-%m-%dT%H:%M:%S.%fZ'
  tasks:
  - name: Setting Base URL
    set_fact: 
      ppdm_baseurl: "https://{{ ppdm_fqdn | regex_replace('^https://') }}"     
  - name: Get PPDM Token for https://{{ ppdm_fqdn | regex_replace('^https://') }}
    include_role: 
      name: get_ppdm_token
    vars: 
      ppdm_password: "{{ ppdm_new_password }}"
  - debug: 
      msg: "{{ access_token }}"
      verbosity: 1
    name: do we have a token ?  

  - name: get srcSystemId
    include_role:
      name: get_ppdm_nodes
  - debug:
      msg: "{{ nodes }}"     
      verbosity: 0     
    when: nodes is defined                 

  - name: Get dstSystemId inventory
    include_role: 
      name: get_ppdm_inventory-sources
    vars:
      filter: 'type eq "PPDM"'
  - debug:
      msg: "{{ inventorysources  | json_query('[*].{name: name,id: id,type: type}') }}"
      verbosity: 0   
    when:  inventorysources is defined
  - name: run sync-instance
    include_role: 
      name: run_ppdm_sync-instance
    vars:
      srcSystemId: "{{ nodes[0].systemId }}" 
      dstSystemId: "{{ inventorysources[0].details.ppdm.systemId }}"
      since: "{{ '%Y-%m-%dT%H:%M:%S.0000Z' | strftime((ansible_date_time.epoch | int)  - ( 86400 ))  }}"  
    when: ( nodes[0] is defined )  and ( inventorysources[0] is defined )
  - debug:
      msg: "{{ sync_instance_run }}"
      verbosity: 0  
    when: sync_instance_run is defined    
