# Example Playbook to start an AdHoc Protection usin v3 Protections
- name: Adhoc Asset Protection using asset filter
  hosts: localhost
  gather_facts: no
  connection: local
  vars_files: 
    - ./vars/main.yml
  vars:
    full_output: false  
  tasks:
  - name: Checking Required Variables
    fail: 
      msg: "We ned either a valid asset_filter or asset_id"
    when: (asset_filter is not defined) and (asset_id is not defined)
  - name: Setting Base URL
    set_fact: 
      ppdm_baseurl: "https://{{ ppdm_fqdn | regex_replace('^https://') }}"     
  - name: Get PPDM Token for https://{{ ppdm_fqdn | regex_replace('^https://') }}
    include_role: 
      name: get_ppdm_token
    vars: 
      ppdm_password: "{{ ppdm_new_password }}"
  - debug: 
      msg: "{{ access_token }}"
      verbosity: 1
    name: do we have a token ?  
  - name: Get PPDM Assets
    vars:
      filter: "{{ asset_filter | default('') }}"
      id: "{{ asset_id | default('')}}"
    include_role: 
      name: get_ppdm_assets
  - name: Assets Result
    debug: 
      msg: "{{ assets | json_query('[*].{name: name,id: id,type: type,protectionStatus: protectionStatus }') }}"
      verbosity: 0   
    when: assets is defined
  - name: Assets Result
    debug: 
      msg: "{{ assets }}"
      verbosity: 0   
    when: assets is defined and full_output == 'true'
  - name: Get Protection Policy for '{{ assets[0].id }}'  
    include_role: 
      name: get_ppdm_protection_policy
    vars:
      id:  "{{ assets[0].protectionPolicyId }}" 
      ppdm_api_ver: /api/v3 
  - name: start AdHoc Protection
    include_role: 
      name: start_adhoc_ppdm_protections
    vars: 
        assetIds: 
          '{{ assets[0].id }}'
        policy_id: '{{ assets[0].protectionPolicyId }}'
        objective_id: '{{ protection_policy.objectives[0].id }}'     
